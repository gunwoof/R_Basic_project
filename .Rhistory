x <- list(5,1,3)
y <- list(1,2,3)
z <- c(x,y)
print(z)
v2 <- list(8,9,v1)
v1 <- 10:20
v2 <- list(8,9,v1)
print(v2)
v1 <- 10:20
v2 <- list(8,9,v1)
print(v2)
x <- list(5,1,3)
y <- list(1,2,3)
z <- list(x,y)
print(z)
a <- list(1,2,3,4,5,6,7,8,9)
print(a[1:8}) # 1,2,3,4,5,6,7,8 출력
print(a[c(1,3,5)]) # 1,3,5 출력
print(a[seq(1,5,2)]) # 1, 3, 5 출력
a <- list(1,2,3,4,5,6,7,8,9)
print(a[1:8]) # 1,2,3,4,5,6,7,8 출력
print(a[c(1,3,5)]) # 1,3,5 출력
print(a[seq(1,5,2)]) # 1, 3, 5 출력
a <- c(1,5,9)
names(a) <- list(”aa”,”bb”,”cc”)
print(a)
# aa bb cc
#  1  5  9 출력
names(벡터변수)[2] ← “dd”  #2번째 인덱스 이름을 바꿈
print(a$"aa") # 1 출력
a <- list(1,5,9)
names(a) <- list(”aa”,”bb”,”cc”)
print(a)
# aa bb cc
#  1  5  9 출력
names(벡터변수)[[2]] ← “dd”  #2번째 인덱스 이름을 바꿈
print(a$aa) # 1 출력
a <- list(1,5,9)
names(a) <- list("aa","bb","cc")
print(a)
# aa bb cc
#  1  5  9 출력
names(벡터변수)[[2]] ← “dd”  #2번째 인덱스 이름을 바꿈
print(a$aa) # 1 출력
a <- list(1,5,9)
names(a) <- list("aa","bb","cc")
print(a)
# aa bb cc
#  1  5  9 출력
names(a)[[2]] ← “dd”  #2번째 인덱스 이름을 바꿈
print(a$aa) # 1 출력
a <- list(1,5,9)
names(a) <- list("aa","bb","cc")
print(a)
# aa bb cc
#  1  5  9 출력
names(a)[2] ← “dd”  #2번째 인덱스 이름을 바꿈
print(a$aa) # 1 출력
a <- list(1,5,9)
names(a) <- list("aa","bb","cc")
print(a)
# aa bb cc
#  1  5  9 출력
names(a)[2] <- "dd"  #2번째 인덱스 이름을 바꿈
print(a$aa) # 1 출력
a <- list(1,5,9)
names(a) <- list("aa","bb","cc")
print(a)
# aa bb cc
#  1  5  9 출력
names(a)[2] <- "dd"  #2번째 인덱스 이름을 바꿈
print(a)
print(a$aa) # 1 출력
a <- list(1,5,9)
names(a) <- list("aa","bb","cc")
print(a)
# aa bb cc
#  1  5  9 출력
names(a)[[2]] <- "dd"  #2번째 인덱스 이름을 바꿈
print(a)
print(a$aa) # 1 출력
m1 <- matrix(1:20, 4, 5)
print(m1)
m1 <- matrix(1:20, 4, 5,byrow=T)
print(m1)
View(a)
View(m1)
View(t)
?View
x <- 5
if(x > 0) {
print("Positive number")
}
x <- 5
if(x > 0){
print("Positive number")
}
x <- 5
if(x > 0) {
print("Positive number")
}
x <- -5
if(x > 0){
print("Non-negative number")
}
else {
print("Negative number")
}
x <- -5
if(x > 0){
print("Non-negative number")
} else {
print("Negative number")
}
a <- factor("1","2")
a
a <- factor(c("1","2"))
a
print(a)
a <- factor(c("a","b","c","c"))
print(a)
a <- factor(c("a","b","d","a","c"))
levels(a)
a <- factor(c("a","b","d","a","c"))
levels(a)
as.integer(a)
print(a)
a <- factor(c("a","b","d","a","c"))
levels(a)
a <- as.integer(a)
print(a)
a <- factor(c("a","b","d","a","c"))
levels(a)
a <- as.integer(a)
print(a)
a[-1]
a
a <- factor(c("a","b","d","a","c"))
levels(a)
a <- as.integer(a)
print(a)
a <- a[-1]
a
a <- factor(c("a","b","d","a","c"))
b <- factor(c("q"))
c <- a+b
print(C)
a <- factor(c("a","b","d","a","c"))
b <- factor(c("q"))
c <- c(a+b)
print(C)
a <- factor(c("a","b","d","a","c"))
print(a[1:8}) # 1,2,3,4,5,6,7,8 출력
print(a[c(1,3,5)]) # 1,3,5 출력
print(a[seq(1,5,2)])
a <- factor(c("a","b","d","a","c"))
print(a[1:8]) # 1,2,3,4,5,6,7,8 출력
print(a[c(1,3,5)]) # 1,3,5 출력
print(a[seq(1,5,2)])
whether <- read.csv("C:\Users\ASUS\Desktop\데이터 처리및 실습", header=F)
head(whether)
whether <- read.csv("C:\\Users\ASUS\Desktop\데이터 처리및 실습", header=F)
head(whether)
whether <- read.csv("C:\\Users\ASUS\Desktop\\데이터 처리및 실습", header=F)
head(whether)
whether <- read.csv("C:\Users\ASUS\Desktop\데이터 처리및 실습\weather_input.csv", header=F)
head(whether)
whether <- read.csv("C:\\Users\ASUS\Desktop\데이터 처리및 실습\weather_input.csv", header=F)
head(whether)
whether <- read.csv("C:\\Users\\ASUS\\Desktop\\데이터 처리및 실습\\weather_input.csv", header=F)
head(whether)
serwd <- ("C:\\Users\\ASUS\\Desktop\\데이터 처리및 실습")
my_iris <- subset(iris, Species == "setosa")
# read.csv(데이터프레임변수, "경로", row.names=FALSE)
write.csv(my_iris,"C:\\Users\\ASUS\\Desktop\\데이터 처리및 실습\\iris_setosa.csv", row.names=FALSE)
serwd <- ("C:\\Users\\ASUS\\Desktop\\데이터 처리및 실습")
whether <- read.csv("weather_input.csv", header=F)
head(whether)
for(i in 1:20) {
if(i%%2 !=0) {
print(i)
}
}
view(iris)
View(iris)
norow <- nrow(iris)
mylabel <- c()
for (i in 1:norow) {
if(iris$petal.Length[i]<=1.6) {
mylabel <-"L"
}else if(iris$petal.Length[i]>=5.1) {
mylabel <-"H"
} else {
mylabel <-"M"
}
}
print(mylabel)
mylabel <- c()
for (i in 1:norow) {
if(iris$petal.Length[i]<=1.6) {
mylabel <-"L"
}else if(iris$Petal.Length[i]>=5.1) {
mylabel <-"H"
} else {
mylabel <-"M"
}
}
print(mylabel)
norow <- nrow(iris)
mylabel <- c()
for (i in 1:norow) {
if(iris$petal.Length[i]<=1.6) {
mylabel <-"L"
}else if(iris$Petal.Length[i]>=5.1) {
mylabel <-"H"
} else {
mylabel <-"M"
}
}
print(mylabel)
norow <- nrow(iris)
mylabel <- c()
for (i in 1:norow) {
if(iris$petal.Length[i]<=1.6) {
mylabel[i] <-"L"
}else if(iris$Petal.Length[i]>=5.1) {
mylabel[i] <-"H"
} else {
mylabel[i] <-"M"
}
}
print(mylabel)
norow <- nrow(iris)
mylabel <- c()
for (i in 1:norow) {
if(iris$petal.Length[i]<=1.6) {
mylabel[i] <-"L"
}else if(iris$Petal.Length[i]>=5.1) {
mylabel[i] <-"H"
} else {
mylabel[i] <-"M"
}
}
print(mylabel)
norow <- nrow(iris)
mylabel <- c()
for (i in 1:norow) {
if(iris$petal.Length[i]<=1.6) {
mylabel[i] <-"L"
}else if(iris$Petal.Length[i]>=5.1) {
mylabel[i] <-"H"
}else{
mylabel[i] <-"M"
}
}
print(mylabel)
norow <- nrow(iris)
mylabel <- c()
for (i in 1:norow) {
if(iris$petal.Length[i]<=1.6){
mylabel[i] <-"L"
}else if(iris$Petal.Length[i]>=5.1) {
mylabel[i] <-"H"
}else{
mylabel[i] <-"M"
}
}
print(mylabel)
norow <- nrow(iris)
mylabel <- c()
for (i in 0:norow) {
if(iris$petal.Length[i]<=1.6){
mylabel[i] <-"L"
}else if(iris$Petal.Length[i]>=5.1) {
mylabel[i] <-"H"
}else{
mylabel[i] <-"M"
}
}
print(mylabel)
norow <- nrow(iris)
mylabel <- c()
for (i in 1:norow) {
if(iris$Petal.Length[i]<=1.6){
mylabel[i] <-"L"
}else if(iris$Petal.Length[i]>=5.1) {
mylabel[i] <-"H"
}else{
mylabel[i] <-"M"
}
}
print(mylabel)
for(i in 1:9) {
for(j in 1:9) {
print("i * j")
for(i in 1:9) {
for(j in 1:9) {
cat("i", "*", "j","=",i*j)
for(i in 1:9) {
for(j in 1:9) {
cat(i,"*", j,"=",i*j "\n")
}
}
for(i in 1:9) {
for(j in 1:9) {
cat(i,"*", j, "=", i*j "\n")
}
}
for(i in 1:9) {
for(j in 1:9) {
cat(i,"*", j, "=", (i*j) "\n")
}
}
for(i in 1:9) {
for(j in 1:9) {
cat(i,"*", j, "=", (i*j))
}
}
for(i in 1:9) {
for(j in 1:9) {
cat(i,"*", j, "=", (i*j),\n)
}
}
for(i in 1:9) {
for(j in 1:9) {
cat(i,"*", j, "=", (i*j),"\n")
}
}
a <-10
b <-20
print(a,b)
a<-readline(prompt="숫자를 입력하세요")
a
apply(iris[,1:4], 1, mean)
iris
apply(iris, 1, mean)
apply(iris[,1], 1, mean)
apply(iris[,1:2], 1, mean)
apply(iris[,1:2], 2, mean)
apply(iris[,1:4], 2, mean)
apply(iris[1:4,], 2, mean)
apply(iris[1:4,], 1, mean)
m1 <- matrix(1:20, 4, 5, byrow=T)
apply(m1, 1, mean)
m1 <- matrix(1:20, 4, 5, byrow=T)
apply(m1, 2, mean)
setwd("C:\\Users\\ASUS\\Desktop\\데이터 처리및 실습")
source("fun.R")
fun()
which(iris[,1:4]>5.0)
which(iris[,1:4]>5.0, arr.ind=TRUE)
score <- c(76,84,69,50,95,60,82,84)
which(score>80)
type(which(score>80))
type(qw)
class(qw)
which.max(score)
which.min(score)
score <- factor(c(76,84,69,50,95,60,82,84))
which(score>80)
score <- factor(c(76,84,69,50,95,60,82,84))
which(score=="80")
score <- factor(c(76,84,69,50,95,60,82,84))
which(score=="84")
score <- factor(c(76,84,69,50,95,60,82,84))
which(score>"84")
m1 <- matrix(1:20, 4, 5, byrow=T)
which(m1>1)
m1 <- matrix(1:20, 4, 5, byrow=T)
which(m1>1, arr.ind=TRUE)
which.max(m1>1, arr.ind=TRUE)
which.max(m1>1)
m1 <- matrix(1:20, 4, 5, byrow=T)
which.min(m1>1)
m1 <- matrix(1:20, 4, 5, byrow=T)
which(m1>10, arr.ind=TRUE)
man <- data.frame(
"나이"=c(21,22,23),
"키"=c(170,175,180),
"몸무게"=c(75,65,60)
)
which(man>1)
which(man[,1:3>1)
which(man[,1:3]>1)
which(man[,1:3]>1, arr.ind=TRUE)
for(i in c("a","b", "c")){
print(i)
}
m1()
m1 <- function(){
return c(1,2,3)
}
m1()
m1 <- function(){
return list(c(1,2,3))
}
m1()
m1 <- function(){
return 1
}
m1()
m1 <- function(){
return(list(c(1,2,3)))
}
m1()
m1 <- function(){
return(c(1,2,3))
}
m1()
m1 <- function(){
return(matrix(1:4,2,2))
}
m1()
i <- 1
j <-1
while(i != 9) {
while(j != 9) {
cat(i,"*",j,"=",i*j)
j <- j+1
}
i <- i+1
}
i <- 1
j <-1
while(i != 9) {
while(j != 9) {
cat(i,"*",j,"=",i*j,\n)
j <- j+1
}
i <- i+1
}
i <- 1
j <-1
while(i != 9) {
while(j != 9) {
cat(i,"*",j,"=",i*j,"\n")
j <- j+1
}
i <- i+1
}
i <- 1
j <- 1
while(i != 9) {
while(j != 9) {
cat(i,"*",j,"=",i*j,"\n")
j <- j+1
}
i <- i+1
}
while(i != 9) {
while(j != 9) {
cat(i,"*",j,"=",i*j,"\n")
j <- j+1
}
i <- i+1
}
i <- 1
j <- 1
while(i != 9) {
while(j != 9) {
cat(i,"*",j,"=",i*j,"\n")
j <- j+1
}
i <- i+1
}
i <- 1
j <- 1
while(i != 9) {
while(j != 9) {
cat(i,"*",j,"=",i*j,"\n")
j <- j+1
}
i <- i+1
}
i <- 1
j <- 1
while(i < 9) {
while(j != 9) {
cat(i,"*",j,"=",i*j,"\n")
j <- j+1
}
i <- i+1
}
# while문으로 구구단 8단 만들기
i <- 1
j <- 1
while(i != 10) {
while(j != 10) {
cat(i,"*",j,"=",i*j,"\n")
j <- j+1
}
i <- i+1
}
m1 <- matrix(1:20, 4, 5,byrow=T)
print(m1)
table(m1)
m1 <- list(1,5,9)
print(m1)
table(m1)
m1 <- list(1,5,9)
print(m1)
table(m1)
m1 <- list(1,5,9)
table(m1)
m1 <- list(1,5,9)
table(m1)
m1 <- c(1,5,9)
table(m1)
m1 <- c(1,5,9)
barplot(m1)
m1 <- c("w","a","q")
barplot(m1)
